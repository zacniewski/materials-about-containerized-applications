# Multi-stage build: lekkie finalne środowisko bez toolchaina
# 1) Etap buildera: kompilacja binarki
FROM golang:1.22-alpine AS builder

WORKDIR /src

# Pobieramy zależności modułów (cache warstw)
COPY go.mod ./
RUN go mod download

# Kopiujemy źródła i budujemy statyczną binarkę
COPY main.go ./
# Kompilujemy bez CGO, dzięki czemu możemy uruchamiać na obrazie "scratch"
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o /app/server .

# 2) Finalny etap: ultra-lekki obraz runtime
FROM scratch

# Zmienna środowiskowa i port
ENV PORT=8080
EXPOSE 8080

# Kopiujemy binarkę z etapu buildera do finalnego obrazu
COPY --from=builder /app/server /server

# Proces startowy
ENTRYPOINT ["/server"]
